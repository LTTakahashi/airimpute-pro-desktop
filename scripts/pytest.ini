[pytest]
# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test paths
testpaths = tests

# Output options
addopts = 
    -v
    --strict-markers
    --tb=short
    --cov=airimpute
    --cov-report=html
    --cov-report=term-missing:skip-covered
    --cov-report=xml
    --cov-branch
    --cov-fail-under=80
    --maxfail=1
    --disable-warnings
    -p no:warnings

# Markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    benchmark: marks tests as benchmark/performance tests
    gpu: marks tests that require GPU
    academic: marks tests for academic validation

# Coverage settings
[coverage:run]
source = airimpute
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */site-packages/*

[coverage:report]
precision = 2
show_missing = True
skip_covered = False

[coverage:html]
directory = htmlcov

# Timeout settings
timeout = 300
timeout_method = thread

# Asyncio settings
asyncio_mode = auto

# Custom settings for scientific computing
[tool:pytest]
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::FutureWarning:numpy
    ignore::UserWarning:sklearn
    
# Hypothesis settings for property-based testing
[hypothesis]
max_examples = 100
deadline = 5000