name: Build Windows Native

on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          architecture: 'x64'
      
      - name: Download Embedded Python
        run: |
          $pythonVersion = "3.10.13"
          $pythonUrl = "https://github.com/indygreg/python-build-standalone/releases/download/20240107/cpython-${pythonVersion}+20240107-x86_64-pc-windows-msvc-install_only.tar.gz"
          
          Write-Host "Downloading Python $pythonVersion..."
          Invoke-WebRequest -Uri $pythonUrl -OutFile "python-embedded.tar.gz" -UseBasicParsing
          
          Write-Host "Extracting to src-tauri/python..."
          cd src-tauri
          tar -xzf "../python-embedded.tar.gz"
          
          if (Test-Path "python/install") {
            Get-ChildItem "python/install" | Move-Item -Destination "python" -Force
            Remove-Item "python/install" -Recurse -Force
          }
          
          Write-Host "Python extracted successfully"
          & ".\python\python.exe" --version
        shell: pwsh
      
      - name: Install Python packages
        run: |
          cd src-tauri
          $pythonExe = ".\python\python.exe"
          
          Write-Host "Setting up pip..."
          & $pythonExe -m ensurepip --upgrade
          & $pythonExe -m pip install --upgrade pip setuptools wheel
          
          Write-Host "Installing essential packages..."
          & $pythonExe -m pip install numpy==1.26.4 pandas==2.2.0 scikit-learn==1.4.0 scipy==1.12.0 pyarrow==15.0.0 joblib==1.3.2 --no-warn-script-location
          
          Write-Host "Note: Large ML libraries will be downloaded on first use"
          & $pythonExe -m pip cache purge
        shell: pwsh
      
      - name: Build Tauri application
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PYO3_PYTHON: ${{ github.workspace }}\src-tauri\python\python.exe
          PYTHONHOME: ${{ github.workspace }}\src-tauri\python
      
      - name: Upload Windows installers
        uses: actions/upload-artifact@v4
        with:
          name: windows-installers-${{ github.sha }}
          path: |
            src-tauri/target/release/bundle/nsis/*.exe
            src-tauri/target/release/bundle/msi/*.msi
          retention-days: 7
          if-no-files-found: error